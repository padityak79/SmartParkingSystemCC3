/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package parkingsystem;
import java.awt.GridLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import javax.swing.JButton;

import java.util.Date;
import java.util.ArrayList;

import java.text.SimpleDateFormat;
/**
 *
 * @author user
 */
public class plotDiagram extends javax.swing.JFrame {

    /** Creates new form plotDiagram */
    public plotDiagram() {
        initComponents();
    }
    
    public plotDiagram( String title, int nRows, int nCols) {
        initComponents();
        this.setTitle(title);
        this.setLayout(new GridLayout(nRows,nCols,10,10));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 823, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 712, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(plotDiagram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(plotDiagram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(plotDiagram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(plotDiagram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new plotDiagram().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    JLabel statusLabel;
    ImageIcon image;
    JButton displayStatusButton;
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    
    public void displayParkingLot(int nRows, int nCols, ArrayList<ArrayList<parkingSlot> > ParkingLot) {
        for( int i = 0; i < nRows; i++) {
            for( int j = 0; j < nCols; j++) {
                javax.swing.JPanel parkingPanel = new javax.swing.JPanel();
                parkingPanel.setLayout(new BoxLayout(parkingPanel, BoxLayout.Y_AXIS));
                if(ParkingLot.get(i).get(j).filled) {
                    statusLabel = new JLabel();
                    displayStatusButton = new JButton("See More..");
                    if(nRows > 4) {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\Garage-medium.png");
                    } else {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\Garage.png");
                    }
                    statusLabel.setIcon(image);
                    statusLabel.setAlignmentX(CENTER_ALIGNMENT);
                    displayStatusButton.setFocusable(false);
                    displayStatusButton.setBackground(Color.WHITE);
                    displayStatusButton.setBorder(BorderFactory.createRaisedBevelBorder());
                    displayStatusButton.setAlignmentX(CENTER_ALIGNMENT);
                    displayStatusButton.setAlignmentY(BOTTOM_ALIGNMENT);
                    displayStatusButton.setPreferredSize(new Dimension(30,10));
                    String parkingId = ParkingLot.get(i).get(j).getParkingId() ;
                    String vehicleId = ParkingLot.get(i).get(j).getVehicleId();
                    String date = dateFormat.format(ParkingLot.get(i).get(j).getExpiryDate());
                    displayStatusButton.addActionListener(new ActionListener() {
                        public void actionPerformed(ActionEvent e) {
                            JOptionPane.showMessageDialog(null,"Parking Slot id: " + parkingId + "\n" + "Vehicle ID: " + vehicleId + "\n" + "Expiry Date: " + date + "\n"
                                    , "Parking Slot Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    });
                    
                    parkingPanel.add(statusLabel);
                    parkingPanel.add(displayStatusButton);
                    parkingPanel.setBackground(Color.red);
                    
                } else {
                    statusLabel = new JLabel();
                    if(nRows > 4) {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\available-medium.png");
                    }   else {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\available-big.png");
                    }
                    statusLabel.setIcon(image);
                    statusLabel.setAlignmentX(CENTER_ALIGNMENT);                    
                    parkingPanel.add(statusLabel);
                    parkingPanel.setBackground(Color.green);
                }
                parkingPanel.setAlignmentX(CENTER_ALIGNMENT);
                parkingPanel.setAlignmentY(BOTTOM_ALIGNMENT);
                this.add(parkingPanel);
            }
        }
    }
    
    public void displayAvailableSlots(int nRows, int nCols, ArrayList<ArrayList<parkingSlot> > ParkingLot) {
        for( int i = 0; i < nRows; i++) {
            for( int j = 0; j < nCols; j++) {
                javax.swing.JPanel parkingPanel = new javax.swing.JPanel();
                parkingPanel.setLayout(new BoxLayout(parkingPanel, BoxLayout.Y_AXIS));
                if(ParkingLot.get(i).get(j).filled) {
                    parkingPanel.setBackground(Color.WHITE);
                } else {
                    statusLabel = new JLabel();
                    if(nRows > 4) {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\available-medium.png");
                    }   else {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\available-big.png");
                    }
                    statusLabel.setIcon(image);
                    statusLabel.setAlignmentX(CENTER_ALIGNMENT);                    
                    parkingPanel.add(statusLabel);
                    parkingPanel.setBackground(Color.green);
                }
                parkingPanel.setAlignmentX(CENTER_ALIGNMENT);
                parkingPanel.setAlignmentY(BOTTOM_ALIGNMENT);
                this.add(parkingPanel);
            }
        }
    }
    
    public void displayOccupiedSlots(int nRows, int nCols, ArrayList<ArrayList<parkingSlot> > ParkingLot) {
        for( int i = 0; i < nRows; i++) {
            for( int j = 0; j < nCols; j++) {
                javax.swing.JPanel parkingPanel = new javax.swing.JPanel();
                displayStatusButton = new JButton("See More..");
                parkingPanel.setLayout(new BoxLayout(parkingPanel, BoxLayout.Y_AXIS));
                if(ParkingLot.get(i).get(j).filled) {
                    statusLabel = new JLabel();
                    if(nRows > 4) {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\Garage-medium.png");
                    } else {
                        image = new ImageIcon("C:\\Users\\user\\Desktop\\Parkingsystem\\src\\img\\Garage.png");
                    }
                    statusLabel.setIcon(image);
                    statusLabel.setAlignmentX(CENTER_ALIGNMENT); 
                    displayStatusButton.setFocusable(false);
                    displayStatusButton.setBackground(Color.WHITE);
                    displayStatusButton.setBorder(BorderFactory.createRaisedBevelBorder());
                    displayStatusButton.setAlignmentX(CENTER_ALIGNMENT);
                    displayStatusButton.setAlignmentY(BOTTOM_ALIGNMENT);
                    displayStatusButton.setPreferredSize(new Dimension(30,10));
                    String parkingId = ParkingLot.get(i).get(j).getParkingId() ;
                    String vehicleId = ParkingLot.get(i).get(j).getVehicleId();
                    String date = dateFormat.format(ParkingLot.get(i).get(j).getExpiryDate());
                    displayStatusButton.addActionListener(new ActionListener() {
                        public void actionPerformed(ActionEvent e) {
                            JOptionPane.showMessageDialog(null,"Parking Slot id: " + parkingId + "\n" + "Vehicle ID: " + vehicleId + "\n" + "Expiry Date: " + date + "\n"
                                    , "Parking Slot Information", JOptionPane.INFORMATION_MESSAGE);
                        }
                    });
                    parkingPanel.add(statusLabel);
                    parkingPanel.add(displayStatusButton);
                    parkingPanel.setBackground(Color.red);
                } else {
                    parkingPanel.setBackground(Color.WHITE);
                }
                parkingPanel.setAlignmentX(CENTER_ALIGNMENT);
                parkingPanel.setAlignmentY(BOTTOM_ALIGNMENT);
                this.add(parkingPanel);
            }
        }
    }
}
